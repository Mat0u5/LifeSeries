// --- Define default properties ---
ext {
    loom_version = '1.11.8'
    minecraft_version = '1.21'
    yarn_mappings = '1.21+build.1:v2'
    loader_version = '0.14.13'
    fabric_version = '0.95.11+1.21'
    polymer_version = 'null'
    blockbench_import_library_version = 'null'
    carpet_bot_relog_version = '1.4.0'   // default to fix the missing property
    voicechat_mod_version = 'null'
    carpet_mod_version = 'null'
    voicechat_api_version = '1.0.0'
    mod_version = 'dev-1.4.0.3'
    maven_group = 'net.mat0u5.lifeseries'
    archives_base_name = 'lifeseries'
    target_version = minecraft_version
    min_version = minecraft_version
    max_version = minecraft_version
}

// --- Plugins ---
plugins {
    id 'fabric-loom' version "${loom_version}"
    id 'maven-publish'
    id "me.modmuss50.mod-publish-plugin" version "0.8.4"
}

version = "${mod_version}+${stonecutter.current?.project ?: '1.21'}"
group = maven_group

base {
    archivesName = archives_base_name
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "lifeseries" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

repositories {
    maven { url "https://api.modrinth.com/maven" }
    maven { url 'https://maven.nucleoid.xyz' }
    maven { url "https://maven.tomalbrc.de" }
    maven { url 'https://maven.ladysnake.org/releases' }
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://maven.maxhenkel.de/repository/public' }
}

fabricApi {
    configureDataGeneration()
}

dependencies {
    minecraft("com.mojang:minecraft:${minecraft_version}")
    mappings("net.fabricmc:yarn:${yarn_mappings}")

    modImplementation("net.fabricmc:fabric-loader:${loader_version}")
    modImplementation("net.fabricmc.fabric-api:fabric-api:${fabric_version}")

    if (polymer_version != "null") modImplementation include("eu.pb4:polymer-bundled:${polymer_version}")
    if (blockbench_import_library_version != "null") modImplementation include("de.tomalbrc:blockbench-import-library:${blockbench_import_library_version}")

    // Compile only for compatibility
    modCompileOnly "maven.modrinth:flashback:z0SX4zNw"

    // Runtime only QOL mods
    modRuntimeOnly "maven.modrinth:carpet-bot-relog:${carpet_bot_relog_version}"
    if (voicechat_mod_version != "null" && voicechat_mod_version != "") modRuntimeOnly "maven.modrinth:simple-voice-chat:fabric-${voicechat_mod_version}"
    if (carpet_mod_version != "null" && carpet_mod_version != "") modRuntimeOnly "maven.modrinth:carpet:${carpet_mod_version}"

    // Runtime and compile
    implementation "de.maxhenkel.voicechat:voicechat-api:${voicechat_api_version}"
}

loom {
    runConfigs.all {
        runDir "../../run"
    }
}

processResources {
    filesMatching("fabric.mod.json") {
        expand(
                "version": mod_version,
                "targetVersion": target_version,
                "minecraftVersion": stonecutter.current?.version ?: minecraft_version
        )
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${archives_base_name}" }
    }
}

// Publishing configuration remains unchanged
publishMods {
    file = remapJar.archiveFile
    changelog = providers.environmentVariable("CHANGELOG")
    type = providers.environmentVariable("VERSION_TYPE")
    displayName = "Life Series ${mod_version} for Fabric ${min_version}${min_version == max_version ? '' : '-' + max_version}"

    modLoaders.add("fabric")

    def isDevBuild = providers.environmentVariable("DEV_BUILD").getOrElse("true") == "true"

    modrinth {
        projectId = isDevBuild ? "RLDqKhd4" : "aLasQi8P"
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        minecraftVersionRange {
            start = min_version
            end = max_version
        }

        requires("fabric-api")
        optional("simple-voice-chat")
    }

    if (!isDevBuild) {
        curseforge {
            projectId = "1151647"
            accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
            minecraftVersionRange {
                start = min_version
                end = max_version
            }

            clientRequired = true
            serverRequired = true

            requires("fabric-api")
            optional("simple-voice-chat")
        }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = archives_base_name
            from components.java
        }
    }
}

task runClientNamed {
    doFirst {
        runClient.args('--username', 'Player')
    }
    finalizedBy 'runClient'
}