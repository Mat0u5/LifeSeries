plugins {
    id 'fabric-loom' version "${loom_version}"
    id 'maven-publish'
    id "me.modmuss50.mod-publish-plugin" version "0.8.4"
}

// ----------------------------
// Version Configuration
// ----------------------------
def modVer = project.findProperty('mod_version') ?: '1.0.0'
def baseModVer = project.findProperty('base_mod_version') ?: '1.4.0.0'
def mcVer = stonecutter.current.version

version = "${modVer}+${baseModVer}+${mcVer}" // Full archive version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

// ----------------------------
// Loom & Mod Setup
// ----------------------------
loom {
    splitEnvironmentSourceSets()

    mods {
        "lifeseries" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

    runConfigs.all {
        runDir "../../run"
    }
}

// ----------------------------
// Repositories
// ----------------------------
repositories {
    maven { url "https://api.modrinth.com/maven" }
    maven { url 'https://maven.nucleoid.xyz' }
    maven { url "https://maven.tomalbrc.de" }
    maven { url 'https://maven.ladysnake.org/releases' }
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://maven.maxhenkel.de/repository/public' }
}

fabricApi {
    configureDataGeneration()
}

// ----------------------------
// Dependencies
// ----------------------------
dependencies {
    minecraft("com.mojang:minecraft:${stonecutter.current.project}")
    mappings("net.fabricmc:yarn:${property("yarn_mappings")}:v2")

    modImplementation("net.fabricmc:fabric-loader:${property("loader_version")}")
    modImplementation("net.fabricmc.fabric-api:fabric-api:${property("fabric_version")}")

    if (project.polymer_version != "null") modImplementation include("eu.pb4:polymer-bundled:${project.polymer_version}")
    if (project.blockbench_import_library_version != "null") modImplementation include("de.tomalbrc:blockbench-import-library:${project.blockbench_import_library_version}")

    implementation "de.maxhenkel.voicechat:voicechat-api:${project.voicechat_api_version}"
    if (project.voicechat_mod_version != "null") modRuntimeOnly "maven.modrinth:simple-voice-chat:fabric-${project.voicechat_mod_version}"
    if (project.carpet_mod_version != "null") modRuntimeOnly "maven.modrinth:carpet:${project.carpet_mod_version}"
}

// ----------------------------
// Java Configuration
// ----------------------------
tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

// ----------------------------
// Process Resources (fabric.mod.json)
// ----------------------------
processResources {
    filesMatching("fabric.mod.json") {
        expand "modVer": modVer,
               "baseModVer": baseModVer,
               "minecraftVer": mcVer
    }
}

// ----------------------------
// JAR Naming
// ----------------------------
jar {
    archiveBaseName.set("trivia-takeover")
    archiveVersion.set("${modVer}+${baseModVer}+${mcVer}")
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// ----------------------------
// Publishing
// ----------------------------
publishMods {
    file = remapJar.archiveFile
    changelog = providers.environmentVariable("CHANGELOG")
    type = providers.environmentVariable("VERSION_TYPE")
    displayName = "Trivia Takeover ${modVer}+${baseModVer}+${mcVer} for Fabric ${project.property('min_version')}"

    modLoaders.add("fabric")

    def isDevBuild = providers.environmentVariable("DEV_BUILD").getOrElse("true") == "true"

    modrinth {
        projectId = isDevBuild ? "RLDqKhd4" : "aLasQi8P"
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        minecraftVersionRange {
            start = project.property('min_version')
            end = project.property('max_version')
        }

        requires("fabric-api")
        optional("simple-voice-chat")
    }

    if (!isDevBuild) {
        curseforge {
            projectId = "1151647"
            accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
            minecraftVersionRange {
                start = project.property('min_version')
                end = project.property('max_version')
            }

            clientRequired = true
            serverRequired = true

            requires("fabric-api")
            optional("simple-voice-chat")
        }
    }
}

// Maven Publishing
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
}

// ----------------------------
// Optional: Run Client Task
// ----------------------------
task runClientNamed {
    doFirst {
        runClient.args('--username', 'Player')
    }
    finalizedBy 'runClient'
}