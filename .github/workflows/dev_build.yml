name: dev_build

on:
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish to platforms'
        required: true
        default: true
        type: boolean
      version_name:
        description: 'Version Name'
        required: true
        default: 'version'
        type: string
      changelog:
        description: 'Shortened Changelog'
        required: true
        default: 'No changelog provided'
        type: string
      full_changelog:
        description: 'Full Changelog Link'
        required: true
        default: 'https://github.com/Mat0u5/LifeSeries'
        type: string
      version_type:
        description: 'Version type'
        required: true
        default: 'BETA'
        type: choice
        options:
          - STABLE
          - BETA
          - ALPHA
      ping:
        description: 'Ping'
        required: true
        default: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: setup jdk 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'microsoft'

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: Commit message newline
        run: |
          COMMIT_MESSAGE_RAW="${{ github.event.inputs.changelog }}"
          COMMIT_MESSAGE_NEWLINE=$(echo "$COMMIT_MESSAGE_RAW" | sed 's/\\n/\'$'\n''/g')
          echo "COMMIT_MESSAGE_NEWLINE<<EOF" >> $GITHUB_ENV
          echo "$COMMIT_MESSAGE_NEWLINE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Commit message line break
        run: |
          COMMIT_MESSAGE_RAW="${{ github.event.inputs.changelog }}"
          COMMIT_MESSAGE_BR=$(echo "$COMMIT_MESSAGE_RAW" | sed 's/\\n/<br>/g')
          echo "COMMIT_MESSAGE_BR=$COMMIT_MESSAGE_BR" >> $GITHUB_ENV

      - name: Publish to Modrinth and Curseforge
        if: ${{ inputs.publish }}
        run: ./gradlew publishMods
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
          CHANGELOG: ${{ env.COMMIT_MESSAGE_BR }}
          VERSION_TYPE: ${{ github.event.inputs.version_type }}
          DEV_BUILD: true

      - name: capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Built JARs
          path: |
            ./versions/**/build/libs/*.jar

      - name: Filter non-source JAR files
        id: filtered_jars
        run: |
          jars=$(find ./versions/**/build/libs/ -type f -name "*.jar" ! -name "*-sources.jar")
          echo "jar_files<<EOF" >> $GITHUB_OUTPUT
          echo "$jars" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate Version Tag
        id: version
        run: |
          # Generate a version based on current date and commit hash
          VERSION="$(echo ${{ github.event.inputs.version_name }})"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release with JARs
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.version.outputs.version }}
          name: 'Dev build: ${{ steps.version.outputs.version }}'
          body: |
            Changelog since the latest full release on [Modrinth](https://modrinth.com/mod/life-series):
            ```
            ${{ env.COMMIT_MESSAGE_NEWLINE }}
            ```
            [Click here to open the **full changelog**](${{ github.event.inputs.full_changelog }})
          draft: false
          prerelease: true
          files: |
            ${{ steps.filtered_jars.outputs.jar_files }}

      - name: Get Title
        id: discord_title
        run: |
          if [ "${{ github.event.inputs.ping }}" = "false" ]; then
            echo "MESSAGE_TITLE=*Ping Skipped.*" >> $GITHUB_ENV
          else
            echo "MESSAGE_TITLE=<@&1346434430683844658>" >> $GITHUB_ENV
          fi

      - name: Discord Message
        uses: satak/webrequest-action@master
        with:
          url: ${{ secrets.DISCORD_WEBHOOK_DEVBUILDS }}
          method: POST
          payload: '{ "content": "${{ env.MESSAGE_TITLE }}\n## [Developer version `${{ github.event.inputs.version_name }}` is out!](https://modrinth.com/mod/life-series-dev/versions)", "embeds": [{"author": {"name": "Mat0u5","url": "https://github.com/Mat0u5","icon_url": "https://github.com/Mat0u5.png"},"description": "\nChangelog since the latest full release:\n```\n${{ github.event.inputs.changelog }}```\n[Click here to open the **full changelog**](${{ github.event.inputs.full_changelog }})", "color": 11683473 }] }'